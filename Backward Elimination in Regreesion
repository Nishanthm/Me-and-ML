import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data=pd.read_csv("C:\\Users\\admin\\Desktop\\P14-Machine-Learning-AZ\\Machine Learning A-Z Template Folder\\Part 2 - Regression\\Section 5 - Multiple Linear Regression\\50_Startups.csv")

data.isnull().any()

data.describe()

x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values

from sklearn.preprocessing import LabelEncoder

le=LabelEncoder()
x[:,3]=le.fit_transform(x[:,3])

from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer,make_column_transformer

#OneHot Encoding using ColumnTransformer

preprocess = make_column_transformer(
    (OneHotEncoder(categories='auto'), [3]), 
    remainder="passthrough")
x = preprocess.fit_transform(x)

x=x[:,1:] #Avoiding dummy variable trap

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=42)

from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score,mean_squared_error

model=LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

#Model Buliding using Backward Elimination

import statsmodels.api as sm
x=np.append(np.ones((x.shape[0],1)),x,axis=1)
x_opt=np.array(x[:,[0,1,2,3,4,5]],dtype='float')
regressor_OLS=sm.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()

x_opt=np.array(x[:,[0,1,3,4,5]],dtype='float')
regressor_OLS=sm.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()

x_opt=np.array(x[:,[0,3,4,5]],dtype='float')
regressor_OLS=sm.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()

x_opt=np.array(x[:,[0,3,5]],dtype='float')
regressor_OLS=sm.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()

x_opt=np.array(x[:,[0,3]],dtype='float')
regressor_OLS=sm.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()

